{"version":3,"sources":["shared/provider/UserProvider.js","pages/HomePage.js","shared/api/Bakverk_API.js","shared/api/service/Bakverk_APIService.js","pages/navigationpages/PastryPage.js","pages/navigationpages/ContactUsPage.js","routes/RoutingPath.js","pages/navigationpages/SignInPage.js","shared/provider/APIProvider.js","shared/api/StarWarsAPI.js","shared/api/service/StarWarsAPIService.js","pages/navigationpages/APIPage.js","pages/navigationpages/RegisterPage.js","routes/Routes.js","components/profile/profilelist/ProfileList.js","shared/images/profile.gif","components/profile/Profile.js","components/navigation/desktopnavigation/DesktopNavigation.js","components/navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserProvider","children","useState","autUser","setAutUser","Provider","value","HomePage","Bakver_API","Axios","create","baseURL","http","get","userData","post","PastryPage","appResponse","setAppResponse","fetchData","a","Bakverk_APIService","data","useEffect","map","x","productsname","quantity","ingredient","ContactUsPage","SignInPage","history","useHistory","username","password","loginuser","setLoginUser","getAllUser","setGetAllUser","useContext","UpdateUserAndPass","event","target","name","localStorage","removeItem","className","placeholder","onChange","type","onClick","length","setItem","push","RoutingPath","alert","APIContext","APIProvider","setData","StarWarsAPI","headers","id","APIPage","datatype","setDataType","personensID","setPersonensID","fetchPerson","StarWarsAPIService","response","status","label","apitype","url","RegisterPage","newUser","setnewUser","register","console","log","Routes","getLocalStorageUser","getItem","chekIfUserAut","exact","path","component","ProfileList","Profile","src","profile","alt","DesktopNavigation","Navigation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.762baf5d.chunk.js","sourcesContent":["import   { useState , createContext} from 'react'\r\n\r\nexport const UserContext = createContext( )\r\n\r\nexport const UserProvider = ({children}) => {\r\n    const [autUser, setAutUser] = useState()\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value ={[autUser,setAutUser]}>\r\n        {children}\r\n\r\n        </UserContext.Provider >\r\n    )\r\n}\r\n\r\n","\r\nexport const HomePage = () => {\r\n    return (\r\n        <div>\r\n            <h1>This is Home page </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Axios from 'axios'\r\n\r\nconst productionAPI = 'https://bakverk-app-deploy.herokuapp.com'\r\nconst developmentAPI  ='http://localhost:8080'\r\n\r\nconst Bakver_API = Axios.create({\r\n    baseURL : productionAPI\r\n})\r\n\r\nexport default Bakver_API","import http from '../Bakverk_API'\r\n\r\nconst getAllData = () => {\r\n    return http.get('/pastry')\r\n}\r\n\r\nconst createUser = (userData) => {\r\n    return http.post('/user' , userData)\r\n}\r\n\r\nconst getUser = () => {\r\n    return http.get('/user')\r\n}\r\n\r\nexport default {\r\n    getAllData,\r\n    createUser,\r\n    getUser\r\n}","import Bakverk_APIService from \"../../shared/api/service/Bakverk_APIService\"\r\nimport {useState,useEffect} from 'react'\r\nimport './PastryPage.css'\r\n\r\nexport const PastryPage = () => {\r\n    const [appResponse , setAppResponse] = useState([])\r\n\r\n\r\n    const fetchData = async () => {\r\n        const {data} = await  Bakverk_APIService.getAllData()\r\n        setAppResponse (data)\r\n    }\r\n\r\n    const displayData = () => {\r\n        return(\r\n            appResponse.map((x) =>\r\n            <div >  \r\n                <h1> Product name : {x.productsname} </h1> \r\n                <h1> Quantity : {x.quantity} </h1>\r\n                <h1> Ingredient : {x.ingredient} </h1>\r\n                <h1> ------</h1>\r\n            </div>)\r\n            \r\n        )\r\n    }\r\n    useEffect(() => {\r\n\t\tfetchData()\r\n\t}, [ ])\r\n    \r\n    return (\r\n        <div >\r\n            {displayData()}\r\n        </div>\r\n    )\r\n}\r\n\r\n        ","export const ContactUsPage = () => {\r\n    return (\r\n        <div>\r\n           <h1>Here Contact Us Page </h1> \r\n        </div>\r\n    )\r\n}\r\n","const homePage:string  ='/'\r\nconst pastryPage:string = '/pastry'\r\nconst contactUsPage:string = '/contact'\r\nconst signInPage:string = '/signin'\r\nconst apiPage:string = '/api'\r\nconst registerPage:string = '/register'\r\n\r\nexport default {\r\n\thomePage,\r\n\tpastryPage,\r\n\tcontactUsPage,\r\n\tsignInPage,\r\n\tapiPage,\r\n\tregisterPage\r\n}\r\n","import { useContext,useState,useEffect } from 'react'\r\nimport { UserContext } from '../../shared/provider/UserProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../routes/RoutingPath'\r\nimport Bakverk_APIService from '../../shared/api/service/Bakverk_APIService'\r\nimport './SignInPage.css'\r\n\r\nexport const SignInPage = () => {\r\n\tconst history = useHistory()\r\n\tconst [loginuser, setLoginUser] = useState({username :'' , password:''})\r\n\tconst [getAllUser , setGetAllUser] = useState([])\r\n\r\n\tconst [autUser, setAutUser] = useContext(UserContext)\r\n\r\n\tconst UpdateUserAndPass = event => {\r\n\t\tsetLoginUser({...loginuser,\r\n\t\t  [event.target.name]: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst fetchData = async () => {\r\n\t\tconst {data} = await  Bakverk_APIService.getUser()\r\n\t\tsetGetAllUser (data)\r\n\t}\r\n\r\n\tconst displayData = () => {\r\n        return(\r\n            getAllUser.map((x) =>\r\n            <div >  \r\n                <h1> username : {x.username} </h1> \r\n            </div>)\r\n            \r\n        )\r\n    }\r\n    useEffect(() => {\r\n\t\tfetchData()\r\n\t}, [ ])\r\n\r\n\tconst signIn =() => {\r\n\t\tif (loginuser.username.length > 4 && loginuser.password.length > 4) {\r\n\t\t\tsetAutUser()\r\n\t\t\tlocalStorage.setItem('username', loginuser.username)\r\n\t\t\tlocalStorage.setItem('password', loginuser.password)\r\n\t\t\thistory.push (RoutingPath.homePage)\r\n\t\t} else {\r\n\t\t\talert('user name or password is incorrect')\r\n\t\t}\r\n\t}\r\n\r\n\tconst register =() => {\r\n\t\thistory.push (RoutingPath.registerPage)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAutUser(null)\r\n\t\tlocalStorage.removeItem('username')\r\n\t\tlocalStorage.removeItem('password')\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='signInWrapper' >\r\n\t\t\t<span>Username : </span> <input placeholder='Username'  onChange={UpdateUserAndPass} name=\"username\"  />\r\n\t\t\t<h1>{loginuser.username}</h1>\r\n\t\t\t<span>Password : </span> <input placeholder='password'  type='password' onChange={UpdateUserAndPass} name=\"password\" />\r\n\t\t\t<h1>{loginuser.password}</h1><br/> \r\n\t\t\t<button onClick={() => signIn()} > Sign in</button>\r\n\t\t\t<h5>Don't have an account?  </h5>\r\n\t\t\t<button onClick={() => register()} > Register</button>\r\n\t\t\t{displayData()}\r\n\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n","import   { useState , createContext} from 'react'\r\n\r\nexport const APIContext = createContext( null)\r\n\r\nexport const APIProvider = ({children}) => {\r\n    const [data, setData] = useState()\r\n\r\n\r\n    return (\r\n        <APIContext.Provider value ={[data,setData]}>\r\n\r\n        {children}\r\n\r\n        </APIContext.Provider >\r\n    )\r\n}\r\n","import Axios from 'axios'\r\n\r\nconst API_URL= 'https://swapi.dev/api'\r\n\r\nconst StarWarsAPI = Axios.create({\r\n    baseURL : API_URL,\r\n    headers : {'Content-Type' : 'application/json'}\r\n}\r\n\r\n)\r\nexport default StarWarsAPI\r\n","import http from '../StarWarsAPI'\r\n\r\nconst getStarWarsPersonens = (id?:number | string) => {\r\n\r\n    return http.get (id)\r\n}\r\n\r\nexport default {\r\n    getStarWarsPersonens\r\n}","import {useEffect , useState , useContext} from 'react'\r\nimport {APIContext} from '../../shared/provider/APIProvider'\r\nimport StarWarsAPIService from '../../shared/api/service/StarWarsAPIService'\r\n\r\n\r\nexport const APIPage = () => {\r\n\tconst [datatype, setDataType] = useState()\r\n\tconst [personensID, setPersonensID] = useState('')\r\n\tconst [data,setData]= useContext(APIContext)\r\n\r\n    const apitypes =[\r\n\t\t{ label: 'people', value: '/people/' },\r\n\t\t{ label: 'planets', value: '/planets/' },\r\n\t\t{ label: 'starships', value: '/starships/' }\r\n\t]\r\n\t\r\n\tconst onChangeHandler = (event) => {\r\n\t\tsetDataType(event.target.value)\r\n\t}\r\n\t\r\n\tconst fetchPerson =async () => {\r\n\t\ttry{\r\n\t\t\tconst response = await StarWarsAPIService.getStarWarsPersonens(datatype+personensID)\r\n\t\t\tsetData(response.data)\r\n\t\t} catch (error) {\r\n\t\t\tsetData('')\r\n\t\t\tif (error.response.status === 404) {\r\n\t\t\t\talert('No data')}\r\n\t\t}\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfetchPerson()\r\n\t}, [ datatype+personensID])\r\n\t\t\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<select onChange={onChangeHandler}> \r\n\t\t\t <option value=\" Select API \"> -- Select a API -- </option>\r\n\t\t\t {apitypes.map((apitype) => <option key={apitype.label} value={apitype.value}>{apitype.label}</option>)}\r\n\t\t\t</select><br/>\r\n\t\t\t<input placeholder='serach for character ID' onChange={event => setPersonensID(event.target.value)}/><br/>\r\n\t\t\t<h1>Name :{data?.name}</h1>\r\n\t\t\t<h1>url :{data?.url}</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\t","import RoutingPath from '../../routes/RoutingPath'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../shared/provider/UserProvider'\r\nimport Bakverk_APIService from '../../shared/api/service/Bakverk_APIService'\r\nimport {useState,useContext } from 'react'\r\nimport './RegisterPage.css'\r\n\r\n\r\nexport const RegisterPage = () => {\r\n    const history = useHistory()\r\n    const [newUser, setnewUser] = useState({username :'' , password:''})\r\n    const [autUser, setAutUser] = useContext(UserContext)\r\n\r\n    const signIn =() => {\r\n        history.push (RoutingPath.signInPage)\r\n    }\r\n\r\n    const register = async () => {\r\n        try{\r\n            const {data} = await Bakverk_APIService.createUser(newUser)\r\n            setAutUser()\r\n            localStorage.setItem('username', newUser.username)\r\n            localStorage.setItem('password', newUser.password)\r\n            history.push (RoutingPath.homePage)\r\n\r\n        } catch(error) {\r\n            console.log(error)\r\n            alert('user name or password is incorrect')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='registerWrapper' >\r\n            <span>Username : </span> <input placeholder='Username' onChange={event => setnewUser({...newUser, username: event.target.value})}  /><br/> \r\n\t\t\t<span>Password : </span> <input placeholder='password' type='password' onChange={event => setnewUser({...newUser, password: event.target.value})}  /><br/> \r\n            <button onClick={() => register()} > Register</button>\r\n           \t<h4>Do you already have an account?  </h4> \r\n\t\t\t<button onClick={() => signIn()} > SignIn</button>\r\n        </div>\r\n    )\r\n}\r\n","import {BrowserRouter as Router , Switch, Route} from 'react-router-dom'\r\nimport {UserContext} from '../shared/provider/UserProvider'\r\nimport React,{useContext, useEffect} from 'react'\r\nimport {HomePage} from '../pages/HomePage'\r\nimport {PastryPage} from '../pages/navigationpages/PastryPage'\r\nimport {ContactUsPage} from '../pages/navigationpages/ContactUsPage'\r\nimport {SignInPage} from '../pages/navigationpages/SignInPage'\r\nimport { APIPage } from '../pages/navigationpages/APIPage'\r\nimport { RegisterPage } from '../pages/navigationpages/RegisterPage'\r\nimport RoutingPath from './RoutingPath'\r\n\r\n\r\n\r\nexport const Routes = ({children}) => {\r\n    const [autUser, setAutUser] = useContext(UserContext)\r\n\r\n    const chekIfUserAut = () => {\r\n        const getLocalStorageUser = localStorage.getItem('username')\r\n        if (getLocalStorageUser) {\r\n            setAutUser(getLocalStorageUser)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        chekIfUserAut()\r\n    })\r\n\r\n    return (\r\n        <Router>\r\n        {children}\r\n            <Switch>\r\n                <Route exact path={RoutingPath.pastryPage} component ={PastryPage} />\r\n                <Route exact path={RoutingPath.contactUsPage} component ={ContactUsPage} />\r\n                <Route exact path={RoutingPath.signInPage} component ={SignInPage} />\r\n                <Route exact path={RoutingPath.apiPage} component ={APIPage} />\r\n                <Route exact path={RoutingPath.registerPage} component ={RegisterPage} />\r\n                <Route component ={HomePage} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\n","import   './ProfileList.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\nimport {useContext} from 'react'\r\nimport {UserContext} from '../../../shared/provider/UserProvider'\r\n\r\nexport const ProfileList = () => {\r\n    const [autUser,setAutUser] = useContext(UserContext)\r\n    const history =useHistory()\r\n\r\n    const logout =() =>{\r\n        setAutUser (null)\r\n        localStorage.removeItem ('username')\r\n        localStorage.removeItem ('password')\r\n        history.push(RoutingPath.homePage)\r\n\r\n    }\r\n    return (\r\n        <div className= 'profileListWrapper'>\r\n            <span>UserName :{autUser}</span> <br/>\r\n            <hr/>\r\n            <span onClick={() => logout()}>Logout</span>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/profile.ca81bf30.gif\";","import './Profile.css'\r\nimport {ProfileList} from './profilelist/ProfileList'\r\nimport profile from '../../shared/images/profile.gif'\r\n\r\n\r\nexport const Profile = () => {\r\n    \r\n    return (\r\n        <div className ='profileWrapper'>\r\n            <img className='profileImg' src={profile} alt ={'error ..'}/>\r\n            <ProfileList/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import './DesktopNavigation.css'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Profile} from '../../profile/Profile'\r\nimport {useContext} from 'react'\r\nimport {UserContext} from '../../../shared/provider/UserProvider'\r\n\r\n\r\nexport const DesktopNavigation = () => {\r\n    const [autUser,] = useContext(UserContext)\r\n\r\n     const history = useHistory()\r\n\r\n     const IfAutuserSigin = () => {\r\n       if (autUser) {\r\n          return <span className='profileSigIn'><Profile/></span>\r\n       } else {\r\n          return  <span className='signInPage' onClick={() => history.push(RoutingPath.signInPage)}>Sign In</span> \r\n       }\r\n    }\r\n\r\n    return (\r\n        <div className='desktopNavigationWrapper'>\r\n\t\t\t<span className='homePage' onClick={() => history.push(RoutingPath.homePage)}>Sweet</span>\r\n            <span className='pastryPage' onClick={() => history.push(RoutingPath.pastryPage)}>Pastry</span>\r\n            <span className='contactusPage' onClick={() => history.push(RoutingPath.contactUsPage)}>Contact Us</span>\r\n            <span className='APIPage' onClick={() => history.push(RoutingPath.apiPage)}>API</span>\r\n            {IfAutuserSigin()}\r\n        </div>\r\n    )\r\n}\r\n","import {DesktopNavigation} from './desktopnavigation/DesktopNavigation'\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div>\r\n            <DesktopNavigation/>\r\n        </div>\r\n    )\r\n}\r\n","import {Routes} from './routes/Routes'\nimport {Navigation} from './components/navigation/Navigation'\nimport {UserProvider} from './shared/provider/UserProvider'\nimport {APIProvider} from './shared/provider/APIProvider'\n\nexport const App = () => {\n  return (\n    <UserProvider>\n     <APIProvider>\n       <Routes>\n            <Navigation/>\n       </Routes>  \n      </APIProvider>        \n    </UserProvider>   \n\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {App} from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals()\n"],"sourceRoot":""}